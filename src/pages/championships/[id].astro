---
import BreadCrumb from "@/components/BreadCrumb.astro";
import Enroll from "@/components/ui/Enroll.tsx";
import Leave from "@/components/ui/Leave.tsx";
import { getStatusClass } from "@/components/ui/utils.tsx";
import { TranslationKey } from "@/i18n/ui";
import { useTranslations } from "@/i18n/utils";
import Layout from "@/layouts/Layout.astro";
import {
	type ChampionshipDto,
	type ChampionshipUserProfileDto,
	type GroupDto,
} from "@/services/api";

import { getApi, getFormattedDate, getRequestParams } from "@/services/utils";
import { UserCircleIcon } from "@heroicons/react/24/outline";
import { getSession } from "auth-astro/server";

const { id } = Astro.params;

const session = await getSession(Astro.request);
const t = useTranslations(session);

const api = getApi();

let championship: ChampionshipDto = {};
let userProfile: ChampionshipUserProfileDto = {};
let groups: GroupDto[] = [];

const type: number = 1;

try {
	if (!id) {
		Astro.redirect("/championships/not-found");
	}

	const championshipResponse =
		await api.api.padelmastersApiDomainEndpointsChampionshipsGetChampionship(
			id || "",
			getRequestParams(session)
		);

	if (championshipResponse.ok) {
		championship = championshipResponse.data.Championship?.Championship || {};
		userProfile = championshipResponse.data.Championship?.UserProfile || {};
		groups = championshipResponse.data.Groups || [];
	} else {
		// 404
		Astro.redirect("/championships/not-found");
	}
} catch (e) {
	console.error(e);
}
---

<Layout title=`Championship ${championship.Name} `>
	<section class="w-full pt-2 md:pt-2 lg:pt-2">
		<div class="overflow-hidden rounded-lg bg-background shadow-md">
			<div class="px-4">
				<BreadCrumb pages={[{ name: "Championships", href: "/championships" }]} />
			</div>
			<div class="p-4">
				<div class="mb-2 flex items-center">
					<h2 class="mb-2 text-xl font-bold">
						{championship.Name}
					</h2>
					{
						userProfile.UserIsRegistered && (
							<UserCircleIcon aria-hidden="true" className="ml-auto h-8 w-8 text-primary-600" />
						)
					}
				</div>
				<p class="mb-4 text-muted-foreground">{championship.Description}</p>
				<div class="mb-4 flex items-center justify-between">
					<div>
						<span class="font-medium">{t(TranslationKey.ChampionshipsStartDate)}:</span>
						{getFormattedDate(championship.StartDate, session)}
					</div>
					<div>
						<span class="font-medium">{t(TranslationKey.ChampionshipsEndDate)}:</span>
						{getFormattedDate(championship.EndDate, session)}
					</div>
				</div>
				<div class="flex items-center justify-between">
					<span
						class={`rounded-full px-2 py-1 text-xs font-medium ${getStatusClass(championship.Status)}`}
					>
						{t(`Championships.Status.${championship.Status}`)}
					</span>
				</div>
			</div>
			<div class="w-full rounded-lg bg-background md:w-auto">
				{
					userProfile.UserCanJoin && (
						<Enroll client:load championshipId={id || ""} text={t(TranslationKey.ActionEnroll)} />
					)
				}
				{
					userProfile.UserCanLeave && (
						<Leave client:load championshipId={id || ""} text={t(TranslationKey.ActionLeave)} />
					)
				}
			</div>
		</div>
		<div class="container mx-auto px-4 py-4 md:px-6 lg:px-8">
			<ol class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-1">
				{
					groups.map((group) => (
						<li
							class="group-card rounded-lg bg-background p-4 shadow-md"
							data-url={`/championships/${id}/${group.Id}/matches`}
						>
							<div class="mb-2 flex items-center justify-between">
								<div class="font-medium text-neutral-700">{group.Name}</div>
							</div>
							<div class="text-sm text-muted-foreground">{group.Description}</div>
						</li>
					))
				}
			</ol>
		</div>
	</section>
</Layout>

<script>
	const cards = document.querySelectorAll(".group-card");

	cards.forEach((card) => {
		card.addEventListener("click", (event) => {
			if (!event.currentTarget) {
				return;
			}
			const target = event.currentTarget as HTMLElement;
			const url = target.getAttribute("data-url");

			if (url) {
				window.location.href = url;
			}
		});
	});
</script>
