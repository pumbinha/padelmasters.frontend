---
import BreadCrumb from "@/components/BreadCrumb.astro";
import Layout from "@/layouts/Layout.astro";
import type { ChampionshipDto, ChampionshipUserProfileDto } from "@/services/api";
import { getApi, getRequestParams } from "@/services/utils";
import { getSession } from "auth-astro/server";

const playerData = [
	{
		name: "Karl Muller",
		sets: 32,
		victory: 0,
		draw: 6,
		lose: 244,
	},
	{
		name: "Some RandomLongName",
		sets: 28,
		victory: 21,
		draw: 9,
		lose: 3,
	},
	{
		name: "Kristian Mbappé",
		sets: 24,
		victory: 18,
		draw: 11,
		lose: 5,
	},
	{
		name: "Kasper Hohenstein",
		sets: 30,
		victory: 22,
		draw: 8,
		lose: 2,
	},
	{
		name: "Tristan Neuhäusser",
		sets: 35,
		victory: 25,
		draw: 5,
		lose: 3,
	},
];

const { id, group } = Astro.params;

const session = await getSession(Astro.request);

const api = getApi();
let championship: ChampionshipDto = {};
let userProfile: ChampionshipUserProfileDto = {};

try {
	if (!id) {
		Astro.redirect("/championships/not-found");
	}

	const championshipResponse =
		await api.api.padelmastersApiDomainEndpointsChampionshipsGetChampionship(
			id || "",
			getRequestParams(session)
		);

	if (championshipResponse.ok) {
		championship = championshipResponse.data.Championship || {};
		userProfile = championshipResponse.data.UserProfile || {};
	} else {
		// 404
		Astro.redirect("/championships/not-found");
	}
} catch (e) {
	console.error(e);
}
---

<Layout title="Padel Masters League">
	<section>
		<div class="px-4 py-2">
			<BreadCrumb
				pages={[
					{ name: "Championships", href: "/championships" },
					{ name: championship.Name, href: `/championships/${id}` },
				]}
			/>
		</div>

		<div class="container mx-auto px-4 py-4 md:px-6 lg:px-8">
			<h3 class="mb-6 text-2xl font-bold">League Standings</h3>
			<ol class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-1">
				{
					playerData.map((player, index) => (
						<li class="rounded-lg bg-background p-4 shadow-md">
							<div class="mb-2 flex items-center justify-between">
								<div class="font-medium">{player.name}</div>
								<div class="flex items-center gap-2">
									<div class="font-medium text-green-500">{player.victory}</div>
									<div class="font-medium text-gray-500">{player.draw}</div>
									<div class="font-medium text-red-500">{player.lose}</div>
								</div>
							</div>
							<div class="text-sm text-muted-foreground">Sets: {player.sets}</div>
						</li>
					))
				}
			</ol>
		</div>
	</section>
</Layout>
